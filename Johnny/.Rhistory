#### Loading Files ####
##Load all files from RDA
path <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(path)
load(file = "Covid_StressMemory.rda")
Stress_Change_Ovrl <- read.csv("Stress_Change_Overall.csv", header = TRUE) #Import data on Changes in stress between TP1 and TP2, Long Format
Stress_Change_Ovrl %>% View
##Load Contingencies and Packages
if(!require("pacman")) install.packages("pacman") #Install pacman to facilitate package installing/loading
p_load(tidyverse, ggplot2, tidyr, dplyr, BayesFactor, brms, lme4, sjPlot, rstanarm, bayestestR) #Load necessary rPackages
Stress_Change_Ovrl %>% View
#### Loading Files ####
##Load all files from RDA
path <- dirname(rstudioapi::getActiveDocumentContext()$path)
setwd(path)
load(file = "Covid_StressMemory.rda")
##Individually Load Files
MostDiff_Time <- read.csv("Covid_MostStressPeriod.csv", header = TRUE) #Import data on most difficult time periods
Stress_OthTime <- read.csv("Stress_SelfandOthers.csv", header = TRUE) #Import data on Stress to others over time
Stress_SelfTime <- read.csv("Stress_Self_Time.csv", header = TRUE) #Import data on Stress to Self over time
Threat_SocDist <- read.csv("Threat_SocialDistance.csv", header = TRUE) #Import data on threat to self and others
Stress_Change <- read.csv("StressChanges.csv", header = TRUE) #Import data on Changes in stress between TP1 and TP2
Stress_Change_Long <- read.csv("StressChanges_Long.csv", header = TRUE) #Import data on Changes in stress between TP1 and TP2, Long Format
Stress_Change_LongBel <- read.csv("StressChanges_LongBel.csv", header = TRUE) #Import data on Changes in stress between TP1 and TP2, Long Format
DevxConf_Bel <- read.csv("Deviations_Belief.csv", header = TRUE) #Import data on Deviations of Remembered Belief-related stress
DevxConf_Exp <- read.csv("Deviations_Experience.csv", header = TRUE) #Import data on Deviations of Remembered Experience-related stress
DevxConf_Type <- read.csv("Deviations_BelExp.csv", header = TRUE) #Import data on Deviations of Remembered Belief/Experience-related stress
Rem_Stress <- read.csv("ConstructionOfRemStress.csv", header = TRUE) #Import data on
#### Haoxue: Memory Deviation vs. delta well-being ####
beta_normalize <- function(var, squeeze = TRUE){
min_var <- min(var, na.rm = TRUE)
max_var <- max(var, na.rm = TRUE)
new <- (var - min_var) / (max_var - min_var)
if (squeeze){
new <- new %>% beta_squeeze
}
return(new)
}
df.all <- read.csv('../df_soc_for_Johnny.csv') %>% rename(Subject = prev_SubjectID_Prolific_MTurk) %>% mutate(Subject = factor(Subject))
df.all <- read.csv('../Haoxue/data/COVIDdata_merged_Haoxue_version.csv') %>%  mutate(Subject = factor(Subject))
# remake df.pca.long again
df.all.long <- df.all %>% pivot_longer(cols = NA_prev_COVID_20_stress_lifechanges_1:NA_Q13_5,
names_to = 'item', values_to = 'value_item') %>%
mutate(time = case_when(str_detect(item, 'prev') ~ 'T1_experienced',
str_detect(item, 'Q12') | str_detect(item, 'Q13') ~ 'T2_experienced',
str_detect(item, 'Q15') | str_detect(item, 'Q16') ~ 'T1_remembered'),
category = case_when(str_detect(item, 'lifechanges') | str_detect(item, 'Q12') | str_detect(item, 'Q15') ~ 'experience',
TRUE ~ 'belief'),
item = str_sub(item, start=-2) %>% str_replace('_','') %>% as.double )
df.experience.expend <- df.all.long %>% filter(!is.na(Dat)) %>% filter(category=='experience') %>%
pivot_wider(names_from = time, values_from = value_item)
df.pca.weighted.sameItem <- df.experience.expend %>% group_by(Subject) %>%
summarise(wm_T1_experienced = mean(T1_experienced, na.rm = TRUE),
wm_T1_remembered = mean(T1_remembered, na.rm = TRUE),
wm_T2_experienced = mean(T2_experienced, na.rm = TRUE),
n_T1_experienced = sum(!is.na(T1_experienced)),
n_T1_remembered = sum(!is.na(T1_remembered)),
n_T2_experienced = sum(!is.na(T2_experienced))) %>%
mutate(wm_deviation = wm_T1_remembered - wm_T1_experienced)
df.pca.weighted.sameItem <- df.experience.expend %>% filter(!is.na(T1_experienced) & !is.na(T1_remembered)) %>%
group_by(Subject) %>%
summarise(wm_T1_experienced = mean(T1_experienced, na.rm = TRUE),
wm_T1_remembered = mean(T1_remembered, na.rm = TRUE),
wm_T2_experienced = mean(T2_experienced, na.rm = TRUE),
n_T1_experienced = sum(!is.na(T1_experienced)),
n_T1_remembered = sum(!is.na(T1_remembered)),
n_T2_experienced = sum(!is.na(T2_experienced))) %>%
mutate(wm_deviation = wm_T1_remembered - wm_T1_experienced)
df.pca.weighted.sameItem %>% View
Stress_Change_Ovrl %>% filter(TP == "Prev")
a <- Stress_Change_Ovrl %>% filter(TP == "Prev")
b <- a %>% merge(df.pca.weighted.sameItem)
b %>% view
b <- a %>% merge(df.pca.weighted.sameItem) %>% mutate(wm_T1_experienced_squeeze = beta_normalize(wm_T1_experienced_squeeze))
b <- a %>% merge(df.pca.weighted.sameItem) %>% mutate(wm_T1_experienced_squeeze = beta_normalize(wm_T1_experienced))
#Load Beta_Squeeze function:
#Squeezes numbers between 0-1 (~ .0002) in order to keep the values between 0 & 1, and not at 0 or 1 for Beta family GLM Regression.
beta_squeeze <- function(y) {
n <- length(y)
y2 <- (y*(n-1) + 0.5)/n
return(y2)
}
b <- a %>% merge(df.pca.weighted.sameItem) %>% mutate(wm_T1_experienced_squeeze = beta_normalize(wm_T1_experienced))
b %>% View
a %>% View
## Overall change in experience-related stress
#Data Preparation
Stress_Change_Ovrl$Subject <- as.factor(Stress_Change_Ovrl$Subject)
Stress_Change_Ovrl$TP <- as.factor(Stress_Change_Ovrl$TP)
#Preparation for INLA Random Slope
nid <- length(table(Stress_Change_Ovrl$Subject))       ## number of persons in the sample
nid
int_id <- as.numeric(Stress_Change_Ovrl$Subject)        ## numeric representation on the random effect (intercept ID)
int_id
slope_id <- int_id + nid
slope_id
inla_ExpStress_Ovrl <- inla(b_Rat ~ TP + f(Subject, model = "iid"), family = "beta", data = Stress_Change_Ovrl, verbose = TRUE, weights = num_weights)
summary(inla_ExpStress_Ovrl) # Summarize results
coefINLA(inla_ExpStress_Ovrl) # fixed effects
if(!require("pacman")) install.packages("pacman") #Install pacman to facilitate package installing/loading
p_load(tidyverse, ggplot2, tidyr, dplyr, BayesFactor, brms, lme4, sjPlot, rstanarm, bayestestR) #Load necessary rPackages
require("devtools")
#install.packages("INLA",repos=c(getOption("repos"),INLA="https://inla.r-inla-download.org/R/testing"), dep=TRUE)
#inla.setOption(mkl=TRUE)
if (!require("INLAutils")) {install_github("timcdlucas/INLAutils"); require("INLAutils")}  ## additional plotting utilities
if (!require("brinla")) {install_github("julianfaraway/brinla"); require("brinla")}   ## additional inla functions
if (!require("coefINLA")) {install_github("hesscl/coefINLA"); require("coefINLA")}    ## nice plots for inla models
#if (!require("rstanarm")) {install.packages("rstanarm"); require("rstanarm")}
if (!require("INLAOutputs")) {install_github('oswaldosantos/INLAOutputs'); require("INLAOutputs")}
options(mc.cores = parallel::detectCores())
library(INLA)
library(coefINLA)
#Load Beta_Squeeze function:
#Squeezes numbers between 0-1 (~ .0002) in order to keep the values between 0 & 1, and not at 0 or 1 for Beta family GLM Regression.
beta_squeeze <- function(y) {
n <- length(y)
y2 <- (y*(n-1) + 0.5)/n
return(y2)
}
inla_ExpStress_Ovrl <- inla(b_Rat ~ TP + f(Subject, model = "iid"), family = "beta", data = Stress_Change_Ovrl, verbose = TRUE, weights = num_weights)
summary(inla_ExpStress_Ovrl) # Summarize results
coefINLA(inla_ExpStress_Ovrl) # fixed effects
Stress_Change_Ovrl <- read.csv("Johnny/Stress_Change_Overall.csv", header = TRUE) #Import data on Changes in stress between TP1 and TP2, Long Format
Stress_Change_OvrlBel <- read.csv("Johnny/Stress_Change_Overall_bel.csv", header = TRUE) #Import data on Changes in stress between TP1 and TP2, Long Format
Stress_Change_Ovrl <- read.csv("Stress_Change_Overall.csv", header = TRUE) #Import data on Changes in stress between TP1 and TP2, Long Format
Stress_Change_OvrlBel <- read.csv("Stress_Change_Overall_bel.csv", header = TRUE) #Import data on Changes in stress between TP1 and TP2, Long Format
RemBel_Stress %>% glimpse
#### Construction of Remembered Stress (N = 730) ####
#Data Preparation
RemBel_Stress$Subject <- as.factor(RemBel_Stress$Subject)
RemExp_Stress$Subject <- as.factor(RemExp_Stress$Subject)
RemBel_Stress$num_weights[is.na(RemBel_Stress$num_weights)] <- 0
RemExp_Stress$num_weights[is.na(RemExp_Stress$num_weights)] <- 0
##Analysis
#Experience-Related
RemStress_Exp <- inla(BCovid_Rem ~ Covid_Exp1 + Covid_Exp2, family = "beta", data = RemExp_Stress, verbose = TRUE, weights = num_weights)
summary(RemStress_Exp) #Summarize results
coefINLA(RemStress_Exp) #Fixed effects
RemBel_Stress %>% View
RemExp_Stress %>% View
a <- RemExp_Stress %>% merge(df.pca.weighted.sameItem)
a %>% View
RemExp_Stress %>% View
RemExp_Stress$Covid_Exp1 %>% hist
RemExp_Stress$Covid_ExpBCovid_Rem1 %>% hist
RemExp_Stress$Covid_ExpBCovid_Rem %>% hist
RemExp_Stress$BCovid_Rem %>% hist
